version: "3.9"

networks: #objeto para especificar qual rede quero criar
  algafood-network: #nome da rede
    driver: bridge #tipo de rede

services: # definindo os sserviços (containers que quero levantar)
  algafood-mysql: #nome do container
    image: mysql:8.0 #imagem do container, mysql versão 8.0
    environment: #variáeis que eu queira passar
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes" #variável para deixar o root sem senha
    ports: #definindo as portas
      - "3306:3306" #mapeamento da porta
    networks: #definindo a rede do container
      - algafood-network #é a rede definida acima

  algafood-api: #nome do container
    image: algafood-api #imagem do container da aplicação (gerada pelo maven)
    #Executa o wait-for-it, aguarda até 30 segundos, fica observando o host algafood-mysql na porta 3306; na hora que o host  na porta passada ficar disponível (ready), executa o comando após "--" ("java", "-jar", "api.jar")
    command: ["/wait-for-it.sh", "-t", "30", "algafood-mysql:3306", "--", "java", "-jar", "api.jar"] #substituindo o CMD do dockerfile. Inserindo o wait-for-it para aguardar a conclusão do MYSQL e, após, executar o .Jar
    environment:
      DB_HOST: algafood-mysql #usando o nome do container do mysql (o docker engine vai resolver o IP - usa o servidor de DNS nativo do proprio docker)
    ports:
      - "8080:8080"
    networks: #definindo a rede do container
      - algafood-network #é a rede definida acima (mesma rede do BD)
    depends_on: #diz que esse container precisa ser inicializado DEPOIS do container MYSQL. Não resolve 100% o problema pq ele não espera o mysql terminar sua inicialização, apenas diz que só será executado após a execução do mysql (se o mysql demorar de startar, corre o risco desse ainda startar antes da finalização por completo do start do mysql )
      - algafood-mysql